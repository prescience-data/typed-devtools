import Protocol from "devtools-protocol"

export type SessionID = Protocol.Target.SessionID
export type TargetID = Protocol.Target.TargetID
export type TargetInfo = Protocol.Target.TargetInfo
export type FrameId = Protocol.Page.FrameId
export type BrowserContextID = Protocol.Browser.BrowserContextID
export type VisualViewport = Protocol.Page.VisualViewport

export interface AuxData {
  isDefault: boolean
  type: string
  frameId: string
}

export type ExecutionContextDescription = Omit<
  Protocol.Runtime.ExecutionContextDescription,
  "auxData"
> & {
  auxData: AuxData
}

export type ExecutionContextCreatedEvent =
  Protocol.Runtime.ExecutionContextCreatedEvent & {
    context: ExecutionContextDescription
  }

export interface AccessibilityDomain {
  disable: "Accessibility.disable"
  enable: "Accessibility.enable"
  getPartialAXTree: "Accessibility.getPartialAXTree"
  getFullAXTree: "Accessibility.getFullAXTree"
  getRootAXNode: "Accessibility.getRootAXNode"
  getAXNodeAndAncestors: "Accessibility.getAXNodeAndAncestors"
  getChildAXNodes: "Accessibility.getChildAXNodes"
  queryAXTree: "Accessibility.queryAXTree"
  loadComplete: "Accessibility.loadComplete"
  nodesUpdated: "Accessibility.nodesUpdated"
}
export interface AnimationDomain {
  disable: "Animation.disable"
  enable: "Animation.enable"
  getCurrentTime: "Animation.getCurrentTime"
  getPlaybackRate: "Animation.getPlaybackRate"
  releaseAnimations: "Animation.releaseAnimations"
  resolveAnimation: "Animation.resolveAnimation"
  seekAnimations: "Animation.seekAnimations"
  setPaused: "Animation.setPaused"
  setPlaybackRate: "Animation.setPlaybackRate"
  setTiming: "Animation.setTiming"
  animationCanceled: "Animation.animationCanceled"
  animationCreated: "Animation.animationCreated"
  animationStarted: "Animation.animationStarted"
}
export interface AuditsDomain {
  getEncodedResponse: "Audits.getEncodedResponse"
  disable: "Audits.disable"
  enable: "Audits.enable"
  checkContrast: "Audits.checkContrast"
  issueAdded: "Audits.issueAdded"
}
export interface BackgroundServiceDomain {
  startObserving: "BackgroundService.startObserving"
  stopObserving: "BackgroundService.stopObserving"
  setRecording: "BackgroundService.setRecording"
  clearEvents: "BackgroundService.clearEvents"
  recordingStateChanged: "BackgroundService.recordingStateChanged"
  backgroundServiceEventReceived: "BackgroundService.backgroundServiceEventReceived"
}
export interface BrowserDomain {
  setPermission: "Browser.setPermission"
  grantPermissions: "Browser.grantPermissions"
  resetPermissions: "Browser.resetPermissions"
  setDownloadBehavior: "Browser.setDownloadBehavior"
  cancelDownload: "Browser.cancelDownload"
  close: "Browser.close"
  crash: "Browser.crash"
  crashGpuProcess: "Browser.crashGpuProcess"
  getVersion: "Browser.getVersion"
  getBrowserCommandLine: "Browser.getBrowserCommandLine"
  getHistograms: "Browser.getHistograms"
  getHistogram: "Browser.getHistogram"
  getWindowBounds: "Browser.getWindowBounds"
  getWindowForTarget: "Browser.getWindowForTarget"
  setWindowBounds: "Browser.setWindowBounds"
  setDockTile: "Browser.setDockTile"
  executeBrowserCommand: "Browser.executeBrowserCommand"
  downloadWillBegin: "Browser.downloadWillBegin"
  downloadProgress: "Browser.downloadProgress"
}
export interface CSSDomain {
  addRule: "CSS.addRule"
  collectClassNames: "CSS.collectClassNames"
  createStyleSheet: "CSS.createStyleSheet"
  disable: "CSS.disable"
  enable: "CSS.enable"
  forcePseudoState: "CSS.forcePseudoState"
  getBackgroundColors: "CSS.getBackgroundColors"
  getComputedStyleForNode: "CSS.getComputedStyleForNode"
  getInlineStylesForNode: "CSS.getInlineStylesForNode"
  getMatchedStylesForNode: "CSS.getMatchedStylesForNode"
  getMediaQueries: "CSS.getMediaQueries"
  getPlatformFontsForNode: "CSS.getPlatformFontsForNode"
  getStyleSheetText: "CSS.getStyleSheetText"
  trackComputedStyleUpdates: "CSS.trackComputedStyleUpdates"
  takeComputedStyleUpdates: "CSS.takeComputedStyleUpdates"
  setEffectivePropertyValueForNode: "CSS.setEffectivePropertyValueForNode"
  setKeyframeKey: "CSS.setKeyframeKey"
  setMediaText: "CSS.setMediaText"
  setContainerQueryText: "CSS.setContainerQueryText"
  setRuleSelector: "CSS.setRuleSelector"
  setStyleSheetText: "CSS.setStyleSheetText"
  setStyleTexts: "CSS.setStyleTexts"
  startRuleUsageTracking: "CSS.startRuleUsageTracking"
  stopRuleUsageTracking: "CSS.stopRuleUsageTracking"
  takeCoverageDelta: "CSS.takeCoverageDelta"
  setLocalFontsEnabled: "CSS.setLocalFontsEnabled"
  fontsUpdated: "CSS.fontsUpdated"
  mediaQueryResultChanged: "CSS.mediaQueryResultChanged"
  styleSheetAdded: "CSS.styleSheetAdded"
  styleSheetChanged: "CSS.styleSheetChanged"
  styleSheetRemoved: "CSS.styleSheetRemoved"
}
export interface CacheStorageDomain {
  deleteCache: "CacheStorage.deleteCache"
  deleteEntry: "CacheStorage.deleteEntry"
  requestCacheNames: "CacheStorage.requestCacheNames"
  requestCachedResponse: "CacheStorage.requestCachedResponse"
  requestEntries: "CacheStorage.requestEntries"
}
export interface CastDomain {
  enable: "Cast.enable"
  disable: "Cast.disable"
  setSinkToUse: "Cast.setSinkToUse"
  startTabMirroring: "Cast.startTabMirroring"
  stopCasting: "Cast.stopCasting"
  sinksUpdated: "Cast.sinksUpdated"
  issueUpdated: "Cast.issueUpdated"
}
export interface DOMDomain {
  collectClassNamesFromSubtree: "DOM.collectClassNamesFromSubtree"
  copyTo: "DOM.copyTo"
  describeNode: "DOM.describeNode"
  scrollIntoViewIfNeeded: "DOM.scrollIntoViewIfNeeded"
  disable: "DOM.disable"
  discardSearchResults: "DOM.discardSearchResults"
  enable: "DOM.enable"
  focus: "DOM.focus"
  getAttributes: "DOM.getAttributes"
  getBoxModel: "DOM.getBoxModel"
  getContentQuads: "DOM.getContentQuads"
  getDocument: "DOM.getDocument"
  getFlattenedDocument: "DOM.getFlattenedDocument"
  getNodesForSubtreeByStyle: "DOM.getNodesForSubtreeByStyle"
  getNodeForLocation: "DOM.getNodeForLocation"
  getOuterHTML: "DOM.getOuterHTML"
  getRelayoutBoundary: "DOM.getRelayoutBoundary"
  getSearchResults: "DOM.getSearchResults"
  hideHighlight: "DOM.hideHighlight"
  highlightNode: "DOM.highlightNode"
  highlightRect: "DOM.highlightRect"
  markUndoableState: "DOM.markUndoableState"
  moveTo: "DOM.moveTo"
  performSearch: "DOM.performSearch"
  pushNodeByPathToFrontend: "DOM.pushNodeByPathToFrontend"
  pushNodesByBackendIdsToFrontend: "DOM.pushNodesByBackendIdsToFrontend"
  querySelector: "DOM.querySelector"
  querySelectorAll: "DOM.querySelectorAll"
  redo: "DOM.redo"
  removeAttribute: "DOM.removeAttribute"
  removeNode: "DOM.removeNode"
  requestChildNodes: "DOM.requestChildNodes"
  requestNode: "DOM.requestNode"
  resolveNode: "DOM.resolveNode"
  setAttributeValue: "DOM.setAttributeValue"
  setAttributesAsText: "DOM.setAttributesAsText"
  setFileInputFiles: "DOM.setFileInputFiles"
  setNodeStackTracesEnabled: "DOM.setNodeStackTracesEnabled"
  getNodeStackTraces: "DOM.getNodeStackTraces"
  getFileInfo: "DOM.getFileInfo"
  setInspectedNode: "DOM.setInspectedNode"
  setNodeName: "DOM.setNodeName"
  setNodeValue: "DOM.setNodeValue"
  setOuterHTML: "DOM.setOuterHTML"
  undo: "DOM.undo"
  getFrameOwner: "DOM.getFrameOwner"
  getContainerForNode: "DOM.getContainerForNode"
  getQueryingDescendantsForContainer: "DOM.getQueryingDescendantsForContainer"
  attributeModified: "DOM.attributeModified"
  attributeRemoved: "DOM.attributeRemoved"
  characterDataModified: "DOM.characterDataModified"
  childNodeCountUpdated: "DOM.childNodeCountUpdated"
  childNodeInserted: "DOM.childNodeInserted"
  childNodeRemoved: "DOM.childNodeRemoved"
  distributedNodesUpdated: "DOM.distributedNodesUpdated"
  documentUpdated: "DOM.documentUpdated"
  inlineStyleInvalidated: "DOM.inlineStyleInvalidated"
  pseudoElementAdded: "DOM.pseudoElementAdded"
  pseudoElementRemoved: "DOM.pseudoElementRemoved"
  setChildNodes: "DOM.setChildNodes"
  shadowRootPopped: "DOM.shadowRootPopped"
  shadowRootPushed: "DOM.shadowRootPushed"
}
export interface DOMDebuggerDomain {
  getEventListeners: "DOMDebugger.getEventListeners"
  removeDOMBreakpoint: "DOMDebugger.removeDOMBreakpoint"
  removeEventListenerBreakpoint: "DOMDebugger.removeEventListenerBreakpoint"
  removeInstrumentationBreakpoint: "DOMDebugger.removeInstrumentationBreakpoint"
  removeXHRBreakpoint: "DOMDebugger.removeXHRBreakpoint"
  setBreakOnCSPViolation: "DOMDebugger.setBreakOnCSPViolation"
  setDOMBreakpoint: "DOMDebugger.setDOMBreakpoint"
  setEventListenerBreakpoint: "DOMDebugger.setEventListenerBreakpoint"
  setInstrumentationBreakpoint: "DOMDebugger.setInstrumentationBreakpoint"
  setXHRBreakpoint: "DOMDebugger.setXHRBreakpoint"
}
export interface EventBreakpointsDomain {
  setInstrumentationBreakpoint: "EventBreakpoints.setInstrumentationBreakpoint"
  removeInstrumentationBreakpoint: "EventBreakpoints.removeInstrumentationBreakpoint"
}
export interface DOMSnapshotDomain {
  disable: "DOMSnapshot.disable"
  enable: "DOMSnapshot.enable"
  getSnapshot: "DOMSnapshot.getSnapshot"
  captureSnapshot: "DOMSnapshot.captureSnapshot"
}
export interface DOMStorageDomain {
  clear: "DOMStorage.clear"
  disable: "DOMStorage.disable"
  enable: "DOMStorage.enable"
  getDOMStorageItems: "DOMStorage.getDOMStorageItems"
  removeDOMStorageItem: "DOMStorage.removeDOMStorageItem"
  setDOMStorageItem: "DOMStorage.setDOMStorageItem"
  domStorageItemAdded: "DOMStorage.domStorageItemAdded"
  domStorageItemRemoved: "DOMStorage.domStorageItemRemoved"
  domStorageItemUpdated: "DOMStorage.domStorageItemUpdated"
  domStorageItemsCleared: "DOMStorage.domStorageItemsCleared"
}
export interface DatabaseDomain {
  disable: "Database.disable"
  enable: "Database.enable"
  executeSQL: "Database.executeSQL"
  getDatabaseTableNames: "Database.getDatabaseTableNames"
  addDatabase: "Database.addDatabase"
}
export interface DeviceOrientationDomain {
  clearDeviceOrientationOverride: "DeviceOrientation.clearDeviceOrientationOverride"
  setDeviceOrientationOverride: "DeviceOrientation.setDeviceOrientationOverride"
}
export interface EmulationDomain {
  canEmulate: "Emulation.canEmulate"
  clearDeviceMetricsOverride: "Emulation.clearDeviceMetricsOverride"
  clearGeolocationOverride: "Emulation.clearGeolocationOverride"
  resetPageScaleFactor: "Emulation.resetPageScaleFactor"
  setFocusEmulationEnabled: "Emulation.setFocusEmulationEnabled"
  setAutoDarkModeOverride: "Emulation.setAutoDarkModeOverride"
  setCPUThrottlingRate: "Emulation.setCPUThrottlingRate"
  setDefaultBackgroundColorOverride: "Emulation.setDefaultBackgroundColorOverride"
  setDeviceMetricsOverride: "Emulation.setDeviceMetricsOverride"
  setScrollbarsHidden: "Emulation.setScrollbarsHidden"
  setDocumentCookieDisabled: "Emulation.setDocumentCookieDisabled"
  setEmitTouchEventsForMouse: "Emulation.setEmitTouchEventsForMouse"
  setEmulatedMedia: "Emulation.setEmulatedMedia"
  setEmulatedVisionDeficiency: "Emulation.setEmulatedVisionDeficiency"
  setGeolocationOverride: "Emulation.setGeolocationOverride"
  setIdleOverride: "Emulation.setIdleOverride"
  clearIdleOverride: "Emulation.clearIdleOverride"
  setNavigatorOverrides: "Emulation.setNavigatorOverrides"
  setPageScaleFactor: "Emulation.setPageScaleFactor"
  setScriptExecutionDisabled: "Emulation.setScriptExecutionDisabled"
  setTouchEmulationEnabled: "Emulation.setTouchEmulationEnabled"
  setVirtualTimePolicy: "Emulation.setVirtualTimePolicy"
  setLocaleOverride: "Emulation.setLocaleOverride"
  setTimezoneOverride: "Emulation.setTimezoneOverride"
  setVisibleSize: "Emulation.setVisibleSize"
  setDisabledImageTypes: "Emulation.setDisabledImageTypes"
  setUserAgentOverride: "Emulation.setUserAgentOverride"
  virtualTimeBudgetExpired: "Emulation.virtualTimeBudgetExpired"
}
export interface HeadlessExperimentalDomain {
  beginFrame: "HeadlessExperimental.beginFrame"
  disable: "HeadlessExperimental.disable"
  enable: "HeadlessExperimental.enable"
  needsBeginFramesChanged: "HeadlessExperimental.needsBeginFramesChanged"
}
export interface IODomain {
  close: "IO.close"
  read: "IO.read"
  resolveBlob: "IO.resolveBlob"
}
export interface IndexedDBDomain {
  clearObjectStore: "IndexedDB.clearObjectStore"
  deleteDatabase: "IndexedDB.deleteDatabase"
  deleteObjectStoreEntries: "IndexedDB.deleteObjectStoreEntries"
  disable: "IndexedDB.disable"
  enable: "IndexedDB.enable"
  requestData: "IndexedDB.requestData"
  getMetadata: "IndexedDB.getMetadata"
  requestDatabase: "IndexedDB.requestDatabase"
  requestDatabaseNames: "IndexedDB.requestDatabaseNames"
}
export interface InputDomain {
  dispatchDragEvent: "Input.dispatchDragEvent"
  dispatchKeyEvent: "Input.dispatchKeyEvent"
  insertText: "Input.insertText"
  imeSetComposition: "Input.imeSetComposition"
  dispatchMouseEvent: "Input.dispatchMouseEvent"
  dispatchTouchEvent: "Input.dispatchTouchEvent"
  emulateTouchFromMouseEvent: "Input.emulateTouchFromMouseEvent"
  setIgnoreInputEvents: "Input.setIgnoreInputEvents"
  setInterceptDrags: "Input.setInterceptDrags"
  synthesizePinchGesture: "Input.synthesizePinchGesture"
  synthesizeScrollGesture: "Input.synthesizeScrollGesture"
  synthesizeTapGesture: "Input.synthesizeTapGesture"
  dragIntercepted: "Input.dragIntercepted"
}
export interface InspectorDomain {
  disable: "Inspector.disable"
  enable: "Inspector.enable"
  detached: "Inspector.detached"
  targetCrashed: "Inspector.targetCrashed"
  targetReloadedAfterCrash: "Inspector.targetReloadedAfterCrash"
}
export interface LayerTreeDomain {
  compositingReasons: "LayerTree.compositingReasons"
  disable: "LayerTree.disable"
  enable: "LayerTree.enable"
  loadSnapshot: "LayerTree.loadSnapshot"
  makeSnapshot: "LayerTree.makeSnapshot"
  profileSnapshot: "LayerTree.profileSnapshot"
  releaseSnapshot: "LayerTree.releaseSnapshot"
  replaySnapshot: "LayerTree.replaySnapshot"
  snapshotCommandLog: "LayerTree.snapshotCommandLog"
  layerPainted: "LayerTree.layerPainted"
  layerTreeDidChange: "LayerTree.layerTreeDidChange"
}
export interface LogDomain {
  clear: "Log.clear"
  disable: "Log.disable"
  enable: "Log.enable"
  startViolationsReport: "Log.startViolationsReport"
  stopViolationsReport: "Log.stopViolationsReport"
  entryAdded: "Log.entryAdded"
}
export interface MemoryDomain {
  getDOMCounters: "Memory.getDOMCounters"
  prepareForLeakDetection: "Memory.prepareForLeakDetection"
  forciblyPurgeJavaScriptMemory: "Memory.forciblyPurgeJavaScriptMemory"
  setPressureNotificationsSuppressed: "Memory.setPressureNotificationsSuppressed"
  simulatePressureNotification: "Memory.simulatePressureNotification"
  startSampling: "Memory.startSampling"
  stopSampling: "Memory.stopSampling"
  getAllTimeSamplingProfile: "Memory.getAllTimeSamplingProfile"
  getBrowserSamplingProfile: "Memory.getBrowserSamplingProfile"
  getSamplingProfile: "Memory.getSamplingProfile"
}
export interface NetworkDomain {
  setAcceptedEncodings: "Network.setAcceptedEncodings"
  clearAcceptedEncodingsOverride: "Network.clearAcceptedEncodingsOverride"
  canClearBrowserCache: "Network.canClearBrowserCache"
  canClearBrowserCookies: "Network.canClearBrowserCookies"
  canEmulateNetworkConditions: "Network.canEmulateNetworkConditions"
  clearBrowserCache: "Network.clearBrowserCache"
  clearBrowserCookies: "Network.clearBrowserCookies"
  continueInterceptedRequest: "Network.continueInterceptedRequest"
  deleteCookies: "Network.deleteCookies"
  disable: "Network.disable"
  emulateNetworkConditions: "Network.emulateNetworkConditions"
  enable: "Network.enable"
  getAllCookies: "Network.getAllCookies"
  getCertificate: "Network.getCertificate"
  getCookies: "Network.getCookies"
  getResponseBody: "Network.getResponseBody"
  getRequestPostData: "Network.getRequestPostData"
  getResponseBodyForInterception: "Network.getResponseBodyForInterception"
  takeResponseBodyForInterceptionAsStream: "Network.takeResponseBodyForInterceptionAsStream"
  replayXHR: "Network.replayXHR"
  searchInResponseBody: "Network.searchInResponseBody"
  setBlockedURLs: "Network.setBlockedURLs"
  setBypassServiceWorker: "Network.setBypassServiceWorker"
  setCacheDisabled: "Network.setCacheDisabled"
  setCookie: "Network.setCookie"
  setCookies: "Network.setCookies"
  setExtraHTTPHeaders: "Network.setExtraHTTPHeaders"
  setAttachDebugStack: "Network.setAttachDebugStack"
  setRequestInterception: "Network.setRequestInterception"
  setUserAgentOverride: "Network.setUserAgentOverride"
  getSecurityIsolationStatus: "Network.getSecurityIsolationStatus"
  enableReportingApi: "Network.enableReportingApi"
  loadNetworkResource: "Network.loadNetworkResource"
  dataReceived: "Network.dataReceived"
  eventSourceMessageReceived: "Network.eventSourceMessageReceived"
  loadingFailed: "Network.loadingFailed"
  loadingFinished: "Network.loadingFinished"
  requestIntercepted: "Network.requestIntercepted"
  requestServedFromCache: "Network.requestServedFromCache"
  requestWillBeSent: "Network.requestWillBeSent"
  resourceChangedPriority: "Network.resourceChangedPriority"
  signedExchangeReceived: "Network.signedExchangeReceived"
  responseReceived: "Network.responseReceived"
  webSocketClosed: "Network.webSocketClosed"
  webSocketCreated: "Network.webSocketCreated"
  webSocketFrameError: "Network.webSocketFrameError"
  webSocketFrameReceived: "Network.webSocketFrameReceived"
  webSocketFrameSent: "Network.webSocketFrameSent"
  webSocketHandshakeResponseReceived: "Network.webSocketHandshakeResponseReceived"
  webSocketWillSendHandshakeRequest: "Network.webSocketWillSendHandshakeRequest"
  webTransportCreated: "Network.webTransportCreated"
  webTransportConnectionEstablished: "Network.webTransportConnectionEstablished"
  webTransportClosed: "Network.webTransportClosed"
  requestWillBeSentExtraInfo: "Network.requestWillBeSentExtraInfo"
  responseReceivedExtraInfo: "Network.responseReceivedExtraInfo"
  trustTokenOperationDone: "Network.trustTokenOperationDone"
  subresourceWebBundleMetadataReceived: "Network.subresourceWebBundleMetadataReceived"
  subresourceWebBundleMetadataError: "Network.subresourceWebBundleMetadataError"
  subresourceWebBundleInnerResponseParsed: "Network.subresourceWebBundleInnerResponseParsed"
  subresourceWebBundleInnerResponseError: "Network.subresourceWebBundleInnerResponseError"
  reportingApiReportAdded: "Network.reportingApiReportAdded"
  reportingApiReportUpdated: "Network.reportingApiReportUpdated"
  reportingApiEndpointsChangedForOrigin: "Network.reportingApiEndpointsChangedForOrigin"
}
export interface OverlayDomain {
  disable: "Overlay.disable"
  enable: "Overlay.enable"
  getHighlightObjectForTest: "Overlay.getHighlightObjectForTest"
  getGridHighlightObjectsForTest: "Overlay.getGridHighlightObjectsForTest"
  getSourceOrderHighlightObjectForTest: "Overlay.getSourceOrderHighlightObjectForTest"
  hideHighlight: "Overlay.hideHighlight"
  highlightFrame: "Overlay.highlightFrame"
  highlightNode: "Overlay.highlightNode"
  highlightQuad: "Overlay.highlightQuad"
  highlightRect: "Overlay.highlightRect"
  highlightSourceOrder: "Overlay.highlightSourceOrder"
  setInspectMode: "Overlay.setInspectMode"
  setShowAdHighlights: "Overlay.setShowAdHighlights"
  setPausedInDebuggerMessage: "Overlay.setPausedInDebuggerMessage"
  setShowDebugBorders: "Overlay.setShowDebugBorders"
  setShowFPSCounter: "Overlay.setShowFPSCounter"
  setShowGridOverlays: "Overlay.setShowGridOverlays"
  setShowFlexOverlays: "Overlay.setShowFlexOverlays"
  setShowScrollSnapOverlays: "Overlay.setShowScrollSnapOverlays"
  setShowContainerQueryOverlays: "Overlay.setShowContainerQueryOverlays"
  setShowPaintRects: "Overlay.setShowPaintRects"
  setShowLayoutShiftRegions: "Overlay.setShowLayoutShiftRegions"
  setShowScrollBottleneckRects: "Overlay.setShowScrollBottleneckRects"
  setShowHitTestBorders: "Overlay.setShowHitTestBorders"
  setShowWebVitals: "Overlay.setShowWebVitals"
  setShowViewportSizeOnResize: "Overlay.setShowViewportSizeOnResize"
  setShowHinge: "Overlay.setShowHinge"
  setShowIsolatedElements: "Overlay.setShowIsolatedElements"
  inspectNodeRequested: "Overlay.inspectNodeRequested"
  nodeHighlightRequested: "Overlay.nodeHighlightRequested"
  screenshotRequested: "Overlay.screenshotRequested"
  inspectModeCanceled: "Overlay.inspectModeCanceled"
}
export interface PageDomain {
  addScriptToEvaluateOnLoad: "Page.addScriptToEvaluateOnLoad"
  addScriptToEvaluateOnNewDocument: "Page.addScriptToEvaluateOnNewDocument"
  bringToFront: "Page.bringToFront"
  captureScreenshot: "Page.captureScreenshot"
  captureSnapshot: "Page.captureSnapshot"
  clearDeviceMetricsOverride: "Page.clearDeviceMetricsOverride"
  clearDeviceOrientationOverride: "Page.clearDeviceOrientationOverride"
  clearGeolocationOverride: "Page.clearGeolocationOverride"
  createIsolatedWorld: "Page.createIsolatedWorld"
  deleteCookie: "Page.deleteCookie"
  disable: "Page.disable"
  enable: "Page.enable"
  getAppManifest: "Page.getAppManifest"
  getInstallabilityErrors: "Page.getInstallabilityErrors"
  getManifestIcons: "Page.getManifestIcons"
  getAppId: "Page.getAppId"
  getCookies: "Page.getCookies"
  getFrameTree: "Page.getFrameTree"
  getLayoutMetrics: "Page.getLayoutMetrics"
  getNavigationHistory: "Page.getNavigationHistory"
  resetNavigationHistory: "Page.resetNavigationHistory"
  getResourceContent: "Page.getResourceContent"
  getResourceTree: "Page.getResourceTree"
  handleJavaScriptDialog: "Page.handleJavaScriptDialog"
  navigate: "Page.navigate"
  navigateToHistoryEntry: "Page.navigateToHistoryEntry"
  printToPDF: "Page.printToPDF"
  reload: "Page.reload"
  removeScriptToEvaluateOnLoad: "Page.removeScriptToEvaluateOnLoad"
  removeScriptToEvaluateOnNewDocument: "Page.removeScriptToEvaluateOnNewDocument"
  screencastFrameAck: "Page.screencastFrameAck"
  searchInResource: "Page.searchInResource"
  setAdBlockingEnabled: "Page.setAdBlockingEnabled"
  setBypassCSP: "Page.setBypassCSP"
  getPermissionsPolicyState: "Page.getPermissionsPolicyState"
  getOriginTrials: "Page.getOriginTrials"
  setDeviceMetricsOverride: "Page.setDeviceMetricsOverride"
  setDeviceOrientationOverride: "Page.setDeviceOrientationOverride"
  setFontFamilies: "Page.setFontFamilies"
  setFontSizes: "Page.setFontSizes"
  setDocumentContent: "Page.setDocumentContent"
  setDownloadBehavior: "Page.setDownloadBehavior"
  setGeolocationOverride: "Page.setGeolocationOverride"
  setLifecycleEventsEnabled: "Page.setLifecycleEventsEnabled"
  setTouchEmulationEnabled: "Page.setTouchEmulationEnabled"
  startScreencast: "Page.startScreencast"
  stopLoading: "Page.stopLoading"
  crash: "Page.crash"
  close: "Page.close"
  setWebLifecycleState: "Page.setWebLifecycleState"
  stopScreencast: "Page.stopScreencast"
  produceCompilationCache: "Page.produceCompilationCache"
  addCompilationCache: "Page.addCompilationCache"
  clearCompilationCache: "Page.clearCompilationCache"
  setSPCTransactionMode: "Page.setSPCTransactionMode"
  generateTestReport: "Page.generateTestReport"
  waitForDebugger: "Page.waitForDebugger"
  setInterceptFileChooserDialog: "Page.setInterceptFileChooserDialog"
  domContentEventFired: "Page.domContentEventFired"
  fileChooserOpened: "Page.fileChooserOpened"
  frameAttached: "Page.frameAttached"
  frameClearedScheduledNavigation: "Page.frameClearedScheduledNavigation"
  frameDetached: "Page.frameDetached"
  frameNavigated: "Page.frameNavigated"
  documentOpened: "Page.documentOpened"
  frameResized: "Page.frameResized"
  frameRequestedNavigation: "Page.frameRequestedNavigation"
  frameScheduledNavigation: "Page.frameScheduledNavigation"
  frameStartedLoading: "Page.frameStartedLoading"
  frameStoppedLoading: "Page.frameStoppedLoading"
  downloadWillBegin: "Page.downloadWillBegin"
  downloadProgress: "Page.downloadProgress"
  interstitialHidden: "Page.interstitialHidden"
  interstitialShown: "Page.interstitialShown"
  javascriptDialogClosed: "Page.javascriptDialogClosed"
  javascriptDialogOpening: "Page.javascriptDialogOpening"
  lifecycleEvent: "Page.lifecycleEvent"
  backForwardCacheNotUsed: "Page.backForwardCacheNotUsed"
  loadEventFired: "Page.loadEventFired"
  navigatedWithinDocument: "Page.navigatedWithinDocument"
  screencastFrame: "Page.screencastFrame"
  screencastVisibilityChanged: "Page.screencastVisibilityChanged"
  windowOpen: "Page.windowOpen"
  compilationCacheProduced: "Page.compilationCacheProduced"
}
export interface PerformanceDomain {
  disable: "Performance.disable"
  enable: "Performance.enable"
  setTimeDomain: "Performance.setTimeDomain"
  getMetrics: "Performance.getMetrics"
  metrics: "Performance.metrics"
}
export interface PerformanceTimelineDomain {
  enable: "PerformanceTimeline.enable"
  timelineEventAdded: "PerformanceTimeline.timelineEventAdded"
}
export interface SecurityDomain {
  disable: "Security.disable"
  enable: "Security.enable"
  setIgnoreCertificateErrors: "Security.setIgnoreCertificateErrors"
  handleCertificateError: "Security.handleCertificateError"
  setOverrideCertificateErrors: "Security.setOverrideCertificateErrors"
  certificateError: "Security.certificateError"
  visibleSecurityStateChanged: "Security.visibleSecurityStateChanged"
  securityStateChanged: "Security.securityStateChanged"
}
export interface ServiceWorkerDomain {
  deliverPushMessage: "ServiceWorker.deliverPushMessage"
  disable: "ServiceWorker.disable"
  dispatchSyncEvent: "ServiceWorker.dispatchSyncEvent"
  dispatchPeriodicSyncEvent: "ServiceWorker.dispatchPeriodicSyncEvent"
  enable: "ServiceWorker.enable"
  inspectWorker: "ServiceWorker.inspectWorker"
  setForceUpdateOnPageLoad: "ServiceWorker.setForceUpdateOnPageLoad"
  skipWaiting: "ServiceWorker.skipWaiting"
  startWorker: "ServiceWorker.startWorker"
  stopAllWorkers: "ServiceWorker.stopAllWorkers"
  stopWorker: "ServiceWorker.stopWorker"
  unregister: "ServiceWorker.unregister"
  updateRegistration: "ServiceWorker.updateRegistration"
  workerErrorReported: "ServiceWorker.workerErrorReported"
  workerRegistrationUpdated: "ServiceWorker.workerRegistrationUpdated"
  workerVersionUpdated: "ServiceWorker.workerVersionUpdated"
}
export interface StorageDomain {
  clearDataForOrigin: "Storage.clearDataForOrigin"
  getCookies: "Storage.getCookies"
  setCookies: "Storage.setCookies"
  clearCookies: "Storage.clearCookies"
  getUsageAndQuota: "Storage.getUsageAndQuota"
  overrideQuotaForOrigin: "Storage.overrideQuotaForOrigin"
  trackCacheStorageForOrigin: "Storage.trackCacheStorageForOrigin"
  trackIndexedDBForOrigin: "Storage.trackIndexedDBForOrigin"
  untrackCacheStorageForOrigin: "Storage.untrackCacheStorageForOrigin"
  untrackIndexedDBForOrigin: "Storage.untrackIndexedDBForOrigin"
  getTrustTokens: "Storage.getTrustTokens"
  clearTrustTokens: "Storage.clearTrustTokens"
  cacheStorageContentUpdated: "Storage.cacheStorageContentUpdated"
  cacheStorageListUpdated: "Storage.cacheStorageListUpdated"
  indexedDBContentUpdated: "Storage.indexedDBContentUpdated"
  indexedDBListUpdated: "Storage.indexedDBListUpdated"
}
export interface SystemInfoDomain {
  getInfo: "SystemInfo.getInfo"
  getProcessInfo: "SystemInfo.getProcessInfo"
}
export interface TargetDomain {
  activateTarget: "Target.activateTarget"
  attachToTarget: "Target.attachToTarget"
  attachToBrowserTarget: "Target.attachToBrowserTarget"
  closeTarget: "Target.closeTarget"
  exposeDevToolsProtocol: "Target.exposeDevToolsProtocol"
  createBrowserContext: "Target.createBrowserContext"
  getBrowserContexts: "Target.getBrowserContexts"
  createTarget: "Target.createTarget"
  detachFromTarget: "Target.detachFromTarget"
  disposeBrowserContext: "Target.disposeBrowserContext"
  getTargetInfo: "Target.getTargetInfo"
  getTargets: "Target.getTargets"
  sendMessageToTarget: "Target.sendMessageToTarget"
  setAutoAttach: "Target.setAutoAttach"
  autoAttachRelated: "Target.autoAttachRelated"
  setDiscoverTargets: "Target.setDiscoverTargets"
  setRemoteLocations: "Target.setRemoteLocations"
  attachedToTarget: "Target.attachedToTarget"
  detachedFromTarget: "Target.detachedFromTarget"
  receivedMessageFromTarget: "Target.receivedMessageFromTarget"
  targetCreated: "Target.targetCreated"
  targetDestroyed: "Target.targetDestroyed"
  targetCrashed: "Target.targetCrashed"
  targetInfoChanged: "Target.targetInfoChanged"
}
export interface TetheringDomain {
  bind: "Tethering.bind"
  unbind: "Tethering.unbind"
  accepted: "Tethering.accepted"
}
export interface TracingDomain {
  end: "Tracing.end"
  getCategories: "Tracing.getCategories"
  recordClockSyncMarker: "Tracing.recordClockSyncMarker"
  requestMemoryDump: "Tracing.requestMemoryDump"
  start: "Tracing.start"
  bufferUsage: "Tracing.bufferUsage"
  dataCollected: "Tracing.dataCollected"
  tracingComplete: "Tracing.tracingComplete"
}
export interface FetchDomain {
  disable: "Fetch.disable"
  enable: "Fetch.enable"
  failRequest: "Fetch.failRequest"
  fulfillRequest: "Fetch.fulfillRequest"
  continueRequest: "Fetch.continueRequest"
  continueWithAuth: "Fetch.continueWithAuth"
  continueResponse: "Fetch.continueResponse"
  getResponseBody: "Fetch.getResponseBody"
  takeResponseBodyAsStream: "Fetch.takeResponseBodyAsStream"
  requestPaused: "Fetch.requestPaused"
  authRequired: "Fetch.authRequired"
}
export interface WebAudioDomain {
  enable: "WebAudio.enable"
  disable: "WebAudio.disable"
  getRealtimeData: "WebAudio.getRealtimeData"
  contextCreated: "WebAudio.contextCreated"
  contextWillBeDestroyed: "WebAudio.contextWillBeDestroyed"
  contextChanged: "WebAudio.contextChanged"
  audioListenerCreated: "WebAudio.audioListenerCreated"
  audioListenerWillBeDestroyed: "WebAudio.audioListenerWillBeDestroyed"
  audioNodeCreated: "WebAudio.audioNodeCreated"
  audioNodeWillBeDestroyed: "WebAudio.audioNodeWillBeDestroyed"
  audioParamCreated: "WebAudio.audioParamCreated"
  audioParamWillBeDestroyed: "WebAudio.audioParamWillBeDestroyed"
  nodesConnected: "WebAudio.nodesConnected"
  nodesDisconnected: "WebAudio.nodesDisconnected"
  nodeParamConnected: "WebAudio.nodeParamConnected"
  nodeParamDisconnected: "WebAudio.nodeParamDisconnected"
}
export interface WebAuthnDomain {
  enable: "WebAuthn.enable"
  disable: "WebAuthn.disable"
  addVirtualAuthenticator: "WebAuthn.addVirtualAuthenticator"
  removeVirtualAuthenticator: "WebAuthn.removeVirtualAuthenticator"
  addCredential: "WebAuthn.addCredential"
  getCredential: "WebAuthn.getCredential"
  getCredentials: "WebAuthn.getCredentials"
  removeCredential: "WebAuthn.removeCredential"
  clearCredentials: "WebAuthn.clearCredentials"
  setUserVerified: "WebAuthn.setUserVerified"
  setAutomaticPresenceSimulation: "WebAuthn.setAutomaticPresenceSimulation"
}
export interface MediaDomain {
  enable: "Media.enable"
  disable: "Media.disable"
  playerPropertiesChanged: "Media.playerPropertiesChanged"
  playerEventsAdded: "Media.playerEventsAdded"
  playerMessagesLogged: "Media.playerMessagesLogged"
  playerErrorsRaised: "Media.playerErrorsRaised"
  playersCreated: "Media.playersCreated"
}
export interface ConsoleDomain {
  clearMessages: "Console.clearMessages"
  disable: "Console.disable"
  enable: "Console.enable"
  messageAdded: "Console.messageAdded"
}
export interface DebuggerDomain {
  continueToLocation: "Debugger.continueToLocation"
  disable: "Debugger.disable"
  enable: "Debugger.enable"
  evaluateOnCallFrame: "Debugger.evaluateOnCallFrame"
  getPossibleBreakpoints: "Debugger.getPossibleBreakpoints"
  getScriptSource: "Debugger.getScriptSource"
  getWasmBytecode: "Debugger.getWasmBytecode"
  getStackTrace: "Debugger.getStackTrace"
  pause: "Debugger.pause"
  pauseOnAsyncCall: "Debugger.pauseOnAsyncCall"
  removeBreakpoint: "Debugger.removeBreakpoint"
  restartFrame: "Debugger.restartFrame"
  resume: "Debugger.resume"
  searchInContent: "Debugger.searchInContent"
  setAsyncCallStackDepth: "Debugger.setAsyncCallStackDepth"
  setBlackboxPatterns: "Debugger.setBlackboxPatterns"
  setBlackboxedRanges: "Debugger.setBlackboxedRanges"
  setBreakpoint: "Debugger.setBreakpoint"
  setInstrumentationBreakpoint: "Debugger.setInstrumentationBreakpoint"
  setBreakpointByUrl: "Debugger.setBreakpointByUrl"
  setBreakpointOnFunctionCall: "Debugger.setBreakpointOnFunctionCall"
  setBreakpointsActive: "Debugger.setBreakpointsActive"
  setPauseOnExceptions: "Debugger.setPauseOnExceptions"
  setReturnValue: "Debugger.setReturnValue"
  setScriptSource: "Debugger.setScriptSource"
  setSkipAllPauses: "Debugger.setSkipAllPauses"
  setVariableValue: "Debugger.setVariableValue"
  stepInto: "Debugger.stepInto"
  stepOut: "Debugger.stepOut"
  stepOver: "Debugger.stepOver"
  breakpointResolved: "Debugger.breakpointResolved"
  paused: "Debugger.paused"
  resumed: "Debugger.resumed"
  scriptFailedToParse: "Debugger.scriptFailedToParse"
  scriptParsed: "Debugger.scriptParsed"
}
export interface HeapProfilerDomain {
  addInspectedHeapObject: "HeapProfiler.addInspectedHeapObject"
  collectGarbage: "HeapProfiler.collectGarbage"
  disable: "HeapProfiler.disable"
  enable: "HeapProfiler.enable"
  getHeapObjectId: "HeapProfiler.getHeapObjectId"
  getObjectByHeapObjectId: "HeapProfiler.getObjectByHeapObjectId"
  getSamplingProfile: "HeapProfiler.getSamplingProfile"
  startSampling: "HeapProfiler.startSampling"
  startTrackingHeapObjects: "HeapProfiler.startTrackingHeapObjects"
  stopSampling: "HeapProfiler.stopSampling"
  stopTrackingHeapObjects: "HeapProfiler.stopTrackingHeapObjects"
  takeHeapSnapshot: "HeapProfiler.takeHeapSnapshot"
  addHeapSnapshotChunk: "HeapProfiler.addHeapSnapshotChunk"
  heapStatsUpdate: "HeapProfiler.heapStatsUpdate"
  lastSeenObjectId: "HeapProfiler.lastSeenObjectId"
  reportHeapSnapshotProgress: "HeapProfiler.reportHeapSnapshotProgress"
  resetProfiles: "HeapProfiler.resetProfiles"
}
export interface ProfilerDomain {
  disable: "Profiler.disable"
  enable: "Profiler.enable"
  getBestEffortCoverage: "Profiler.getBestEffortCoverage"
  setSamplingInterval: "Profiler.setSamplingInterval"
  start: "Profiler.start"
  startPreciseCoverage: "Profiler.startPreciseCoverage"
  startTypeProfile: "Profiler.startTypeProfile"
  stop: "Profiler.stop"
  stopPreciseCoverage: "Profiler.stopPreciseCoverage"
  stopTypeProfile: "Profiler.stopTypeProfile"
  takePreciseCoverage: "Profiler.takePreciseCoverage"
  takeTypeProfile: "Profiler.takeTypeProfile"
  consoleProfileFinished: "Profiler.consoleProfileFinished"
  consoleProfileStarted: "Profiler.consoleProfileStarted"
  preciseCoverageDeltaUpdate: "Profiler.preciseCoverageDeltaUpdate"
}
export interface RuntimeDomain {
  awaitPromise: "Runtime.awaitPromise"
  callFunctionOn: "Runtime.callFunctionOn"
  compileScript: "Runtime.compileScript"
  disable: "Runtime.disable"
  discardConsoleEntries: "Runtime.discardConsoleEntries"
  enable: "Runtime.enable"
  evaluate: "Runtime.evaluate"
  getIsolateId: "Runtime.getIsolateId"
  getHeapUsage: "Runtime.getHeapUsage"
  getProperties: "Runtime.getProperties"
  globalLexicalScopeNames: "Runtime.globalLexicalScopeNames"
  queryObjects: "Runtime.queryObjects"
  releaseObject: "Runtime.releaseObject"
  releaseObjectGroup: "Runtime.releaseObjectGroup"
  runIfWaitingForDebugger: "Runtime.runIfWaitingForDebugger"
  runScript: "Runtime.runScript"
  setAsyncCallStackDepth: "Runtime.setAsyncCallStackDepth"
  setCustomObjectFormatterEnabled: "Runtime.setCustomObjectFormatterEnabled"
  setMaxCallStackSizeToCapture: "Runtime.setMaxCallStackSizeToCapture"
  terminateExecution: "Runtime.terminateExecution"
  addBinding: "Runtime.addBinding"
  removeBinding: "Runtime.removeBinding"
  bindingCalled: "Runtime.bindingCalled"
  consoleAPICalled: "Runtime.consoleAPICalled"
  exceptionRevoked: "Runtime.exceptionRevoked"
  exceptionThrown: "Runtime.exceptionThrown"
  executionContextCreated: "Runtime.executionContextCreated"
  executionContextDestroyed: "Runtime.executionContextDestroyed"
  executionContextsCleared: "Runtime.executionContextsCleared"
  inspectRequested: "Runtime.inspectRequested"
}
export interface SchemaDomain {
  getDomains: "Schema.getDomains"
}

export interface ParamsLookup {
  "Accessibility.getPartialAXTree": Protocol.Accessibility.GetPartialAXTreeRequest
  "Accessibility.getFullAXTree": Protocol.Accessibility.GetFullAXTreeRequest
  "Accessibility.getRootAXNode": Protocol.Accessibility.GetRootAXNodeRequest
  "Accessibility.getAXNodeAndAncestors": Protocol.Accessibility.GetAXNodeAndAncestorsRequest
  "Accessibility.getChildAXNodes": Protocol.Accessibility.GetChildAXNodesRequest
  "Accessibility.queryAXTree": Protocol.Accessibility.QueryAXTreeRequest
  "Animation.getCurrentTime": Protocol.Animation.GetCurrentTimeRequest
  "Animation.releaseAnimations": Protocol.Animation.ReleaseAnimationsRequest
  "Animation.resolveAnimation": Protocol.Animation.ResolveAnimationRequest
  "Animation.seekAnimations": Protocol.Animation.SeekAnimationsRequest
  "Animation.setPaused": Protocol.Animation.SetPausedRequest
  "Animation.setPlaybackRate": Protocol.Animation.SetPlaybackRateRequest
  "Animation.setTiming": Protocol.Animation.SetTimingRequest
  "Audits.getEncodedResponse": Protocol.Audits.GetEncodedResponseRequest
  "Audits.checkContrast": Protocol.Audits.CheckContrastRequest
  "BackgroundService.startObserving": Protocol.BackgroundService.StartObservingRequest
  "BackgroundService.stopObserving": Protocol.BackgroundService.StopObservingRequest
  "BackgroundService.setRecording": Protocol.BackgroundService.SetRecordingRequest
  "BackgroundService.clearEvents": Protocol.BackgroundService.ClearEventsRequest
  "Browser.setPermission": Protocol.Browser.SetPermissionRequest
  "Browser.grantPermissions": Protocol.Browser.GrantPermissionsRequest
  "Browser.resetPermissions": Protocol.Browser.ResetPermissionsRequest
  "Browser.setDownloadBehavior": Protocol.Browser.SetDownloadBehaviorRequest
  "Browser.cancelDownload": Protocol.Browser.CancelDownloadRequest
  "Browser.getHistograms": Protocol.Browser.GetHistogramsRequest
  "Browser.getHistogram": Protocol.Browser.GetHistogramRequest
  "Browser.getWindowBounds": Protocol.Browser.GetWindowBoundsRequest
  "Browser.getWindowForTarget": Protocol.Browser.GetWindowForTargetRequest
  "Browser.setWindowBounds": Protocol.Browser.SetWindowBoundsRequest
  "Browser.setDockTile": Protocol.Browser.SetDockTileRequest
  "Browser.executeBrowserCommand": Protocol.Browser.ExecuteBrowserCommandRequest
  "CSS.addRule": Protocol.CSS.AddRuleRequest
  "CSS.collectClassNames": Protocol.CSS.CollectClassNamesRequest
  "CSS.createStyleSheet": Protocol.CSS.CreateStyleSheetRequest
  "CSS.forcePseudoState": Protocol.CSS.ForcePseudoStateRequest
  "CSS.getBackgroundColors": Protocol.CSS.GetBackgroundColorsRequest
  "CSS.getComputedStyleForNode": Protocol.CSS.GetComputedStyleForNodeRequest
  "CSS.getInlineStylesForNode": Protocol.CSS.GetInlineStylesForNodeRequest
  "CSS.getMatchedStylesForNode": Protocol.CSS.GetMatchedStylesForNodeRequest
  "CSS.getPlatformFontsForNode": Protocol.CSS.GetPlatformFontsForNodeRequest
  "CSS.getStyleSheetText": Protocol.CSS.GetStyleSheetTextRequest
  "CSS.trackComputedStyleUpdates": Protocol.CSS.TrackComputedStyleUpdatesRequest
  "CSS.setEffectivePropertyValueForNode": Protocol.CSS.SetEffectivePropertyValueForNodeRequest
  "CSS.setKeyframeKey": Protocol.CSS.SetKeyframeKeyRequest
  "CSS.setMediaText": Protocol.CSS.SetMediaTextRequest
  "CSS.setContainerQueryText": Protocol.CSS.SetContainerQueryTextRequest
  "CSS.setRuleSelector": Protocol.CSS.SetRuleSelectorRequest
  "CSS.setStyleSheetText": Protocol.CSS.SetStyleSheetTextRequest
  "CSS.setStyleTexts": Protocol.CSS.SetStyleTextsRequest
  "CSS.setLocalFontsEnabled": Protocol.CSS.SetLocalFontsEnabledRequest
  "CacheStorage.deleteCache": Protocol.CacheStorage.DeleteCacheRequest
  "CacheStorage.deleteEntry": Protocol.CacheStorage.DeleteEntryRequest
  "CacheStorage.requestCacheNames": Protocol.CacheStorage.RequestCacheNamesRequest
  "CacheStorage.requestCachedResponse": Protocol.CacheStorage.RequestCachedResponseRequest
  "CacheStorage.requestEntries": Protocol.CacheStorage.RequestEntriesRequest
  "Cast.enable": Protocol.Cast.EnableRequest
  "Cast.setSinkToUse": Protocol.Cast.SetSinkToUseRequest
  "Cast.startTabMirroring": Protocol.Cast.StartTabMirroringRequest
  "Cast.stopCasting": Protocol.Cast.StopCastingRequest
  "DOM.collectClassNamesFromSubtree": Protocol.DOM.CollectClassNamesFromSubtreeRequest
  "DOM.copyTo": Protocol.DOM.CopyToRequest
  "DOM.describeNode": Protocol.DOM.DescribeNodeRequest
  "DOM.scrollIntoViewIfNeeded": Protocol.DOM.ScrollIntoViewIfNeededRequest
  "DOM.discardSearchResults": Protocol.DOM.DiscardSearchResultsRequest
  "DOM.focus": Protocol.DOM.FocusRequest
  "DOM.getAttributes": Protocol.DOM.GetAttributesRequest
  "DOM.getBoxModel": Protocol.DOM.GetBoxModelRequest
  "DOM.getContentQuads": Protocol.DOM.GetContentQuadsRequest
  "DOM.getDocument": Protocol.DOM.GetDocumentRequest
  "DOM.getFlattenedDocument": Protocol.DOM.GetFlattenedDocumentRequest
  "DOM.getNodesForSubtreeByStyle": Protocol.DOM.GetNodesForSubtreeByStyleRequest
  "DOM.getNodeForLocation": Protocol.DOM.GetNodeForLocationRequest
  "DOM.getOuterHTML": Protocol.DOM.GetOuterHTMLRequest
  "DOM.getRelayoutBoundary": Protocol.DOM.GetRelayoutBoundaryRequest
  "DOM.getSearchResults": Protocol.DOM.GetSearchResultsRequest
  "DOM.moveTo": Protocol.DOM.MoveToRequest
  "DOM.performSearch": Protocol.DOM.PerformSearchRequest
  "DOM.pushNodeByPathToFrontend": Protocol.DOM.PushNodeByPathToFrontendRequest
  "DOM.pushNodesByBackendIdsToFrontend": Protocol.DOM.PushNodesByBackendIdsToFrontendRequest
  "DOM.querySelector": Protocol.DOM.QuerySelectorRequest
  "DOM.querySelectorAll": Protocol.DOM.QuerySelectorAllRequest
  "DOM.removeAttribute": Protocol.DOM.RemoveAttributeRequest
  "DOM.removeNode": Protocol.DOM.RemoveNodeRequest
  "DOM.requestChildNodes": Protocol.DOM.RequestChildNodesRequest
  "DOM.requestNode": Protocol.DOM.RequestNodeRequest
  "DOM.resolveNode": Protocol.DOM.ResolveNodeRequest
  "DOM.setAttributeValue": Protocol.DOM.SetAttributeValueRequest
  "DOM.setAttributesAsText": Protocol.DOM.SetAttributesAsTextRequest
  "DOM.setFileInputFiles": Protocol.DOM.SetFileInputFilesRequest
  "DOM.setNodeStackTracesEnabled": Protocol.DOM.SetNodeStackTracesEnabledRequest
  "DOM.getNodeStackTraces": Protocol.DOM.GetNodeStackTracesRequest
  "DOM.getFileInfo": Protocol.DOM.GetFileInfoRequest
  "DOM.setInspectedNode": Protocol.DOM.SetInspectedNodeRequest
  "DOM.setNodeName": Protocol.DOM.SetNodeNameRequest
  "DOM.setNodeValue": Protocol.DOM.SetNodeValueRequest
  "DOM.setOuterHTML": Protocol.DOM.SetOuterHTMLRequest
  "DOM.getFrameOwner": Protocol.DOM.GetFrameOwnerRequest
  "DOM.getContainerForNode": Protocol.DOM.GetContainerForNodeRequest
  "DOM.getQueryingDescendantsForContainer": Protocol.DOM.GetQueryingDescendantsForContainerRequest
  "DOMDebugger.getEventListeners": Protocol.DOMDebugger.GetEventListenersRequest
  "DOMDebugger.removeDOMBreakpoint": Protocol.DOMDebugger.RemoveDOMBreakpointRequest
  "DOMDebugger.removeEventListenerBreakpoint": Protocol.DOMDebugger.RemoveEventListenerBreakpointRequest
  "DOMDebugger.removeInstrumentationBreakpoint": Protocol.DOMDebugger.RemoveInstrumentationBreakpointRequest
  "DOMDebugger.removeXHRBreakpoint": Protocol.DOMDebugger.RemoveXHRBreakpointRequest
  "DOMDebugger.setBreakOnCSPViolation": Protocol.DOMDebugger.SetBreakOnCSPViolationRequest
  "DOMDebugger.setDOMBreakpoint": Protocol.DOMDebugger.SetDOMBreakpointRequest
  "DOMDebugger.setEventListenerBreakpoint": Protocol.DOMDebugger.SetEventListenerBreakpointRequest
  "DOMDebugger.setInstrumentationBreakpoint": Protocol.DOMDebugger.SetInstrumentationBreakpointRequest
  "DOMDebugger.setXHRBreakpoint": Protocol.DOMDebugger.SetXHRBreakpointRequest
  "EventBreakpoints.setInstrumentationBreakpoint": Protocol.EventBreakpoints.SetInstrumentationBreakpointRequest
  "EventBreakpoints.removeInstrumentationBreakpoint": Protocol.EventBreakpoints.RemoveInstrumentationBreakpointRequest
  "DOMSnapshot.getSnapshot": Protocol.DOMSnapshot.GetSnapshotRequest
  "DOMSnapshot.captureSnapshot": Protocol.DOMSnapshot.CaptureSnapshotRequest
  "DOMStorage.clear": Protocol.DOMStorage.ClearRequest
  "DOMStorage.getDOMStorageItems": Protocol.DOMStorage.GetDOMStorageItemsRequest
  "DOMStorage.removeDOMStorageItem": Protocol.DOMStorage.RemoveDOMStorageItemRequest
  "DOMStorage.setDOMStorageItem": Protocol.DOMStorage.SetDOMStorageItemRequest
  "Database.executeSQL": Protocol.Database.ExecuteSQLRequest
  "Database.getDatabaseTableNames": Protocol.Database.GetDatabaseTableNamesRequest
  "DeviceOrientation.setDeviceOrientationOverride": Protocol.DeviceOrientation.SetDeviceOrientationOverrideRequest
  "Emulation.setFocusEmulationEnabled": Protocol.Emulation.SetFocusEmulationEnabledRequest
  "Emulation.setAutoDarkModeOverride": Protocol.Emulation.SetAutoDarkModeOverrideRequest
  "Emulation.setCPUThrottlingRate": Protocol.Emulation.SetCPUThrottlingRateRequest
  "Emulation.setDefaultBackgroundColorOverride": Protocol.Emulation.SetDefaultBackgroundColorOverrideRequest
  "Emulation.setDeviceMetricsOverride": Protocol.Emulation.SetDeviceMetricsOverrideRequest
  "Emulation.setScrollbarsHidden": Protocol.Emulation.SetScrollbarsHiddenRequest
  "Emulation.setDocumentCookieDisabled": Protocol.Emulation.SetDocumentCookieDisabledRequest
  "Emulation.setEmitTouchEventsForMouse": Protocol.Emulation.SetEmitTouchEventsForMouseRequest
  "Emulation.setEmulatedMedia": Protocol.Emulation.SetEmulatedMediaRequest
  "Emulation.setEmulatedVisionDeficiency": Protocol.Emulation.SetEmulatedVisionDeficiencyRequest
  "Emulation.setGeolocationOverride": Protocol.Emulation.SetGeolocationOverrideRequest
  "Emulation.setIdleOverride": Protocol.Emulation.SetIdleOverrideRequest
  "Emulation.setNavigatorOverrides": Protocol.Emulation.SetNavigatorOverridesRequest
  "Emulation.setPageScaleFactor": Protocol.Emulation.SetPageScaleFactorRequest
  "Emulation.setScriptExecutionDisabled": Protocol.Emulation.SetScriptExecutionDisabledRequest
  "Emulation.setTouchEmulationEnabled": Protocol.Emulation.SetTouchEmulationEnabledRequest
  "Emulation.setVirtualTimePolicy": Protocol.Emulation.SetVirtualTimePolicyRequest
  "Emulation.setLocaleOverride": Protocol.Emulation.SetLocaleOverrideRequest
  "Emulation.setTimezoneOverride": Protocol.Emulation.SetTimezoneOverrideRequest
  "Emulation.setVisibleSize": Protocol.Emulation.SetVisibleSizeRequest
  "Emulation.setDisabledImageTypes": Protocol.Emulation.SetDisabledImageTypesRequest
  "Emulation.setUserAgentOverride": Protocol.Emulation.SetUserAgentOverrideRequest
  "HeadlessExperimental.beginFrame": Protocol.HeadlessExperimental.BeginFrameRequest
  "IO.close": Protocol.IO.CloseRequest
  "IO.read": Protocol.IO.ReadRequest
  "IO.resolveBlob": Protocol.IO.ResolveBlobRequest
  "IndexedDB.clearObjectStore": Protocol.IndexedDB.ClearObjectStoreRequest
  "IndexedDB.deleteDatabase": Protocol.IndexedDB.DeleteDatabaseRequest
  "IndexedDB.deleteObjectStoreEntries": Protocol.IndexedDB.DeleteObjectStoreEntriesRequest
  "IndexedDB.requestData": Protocol.IndexedDB.RequestDataRequest
  "IndexedDB.getMetadata": Protocol.IndexedDB.GetMetadataRequest
  "IndexedDB.requestDatabase": Protocol.IndexedDB.RequestDatabaseRequest
  "IndexedDB.requestDatabaseNames": Protocol.IndexedDB.RequestDatabaseNamesRequest
  "Input.dispatchDragEvent": Protocol.Input.DispatchDragEventRequest
  "Input.dispatchKeyEvent": Protocol.Input.DispatchKeyEventRequest
  "Input.insertText": Protocol.Input.InsertTextRequest
  "Input.imeSetComposition": Protocol.Input.ImeSetCompositionRequest
  "Input.dispatchMouseEvent": Protocol.Input.DispatchMouseEventRequest
  "Input.dispatchTouchEvent": Protocol.Input.DispatchTouchEventRequest
  "Input.emulateTouchFromMouseEvent": Protocol.Input.EmulateTouchFromMouseEventRequest
  "Input.setIgnoreInputEvents": Protocol.Input.SetIgnoreInputEventsRequest
  "Input.setInterceptDrags": Protocol.Input.SetInterceptDragsRequest
  "Input.synthesizePinchGesture": Protocol.Input.SynthesizePinchGestureRequest
  "Input.synthesizeScrollGesture": Protocol.Input.SynthesizeScrollGestureRequest
  "Input.synthesizeTapGesture": Protocol.Input.SynthesizeTapGestureRequest
  "LayerTree.compositingReasons": Protocol.LayerTree.CompositingReasonsRequest
  "LayerTree.loadSnapshot": Protocol.LayerTree.LoadSnapshotRequest
  "LayerTree.makeSnapshot": Protocol.LayerTree.MakeSnapshotRequest
  "LayerTree.profileSnapshot": Protocol.LayerTree.ProfileSnapshotRequest
  "LayerTree.releaseSnapshot": Protocol.LayerTree.ReleaseSnapshotRequest
  "LayerTree.replaySnapshot": Protocol.LayerTree.ReplaySnapshotRequest
  "LayerTree.snapshotCommandLog": Protocol.LayerTree.SnapshotCommandLogRequest
  "Log.startViolationsReport": Protocol.Log.StartViolationsReportRequest
  "Memory.setPressureNotificationsSuppressed": Protocol.Memory.SetPressureNotificationsSuppressedRequest
  "Memory.simulatePressureNotification": Protocol.Memory.SimulatePressureNotificationRequest
  "Memory.startSampling": Protocol.Memory.StartSamplingRequest
  "Network.setAcceptedEncodings": Protocol.Network.SetAcceptedEncodingsRequest
  "Network.continueInterceptedRequest": Protocol.Network.ContinueInterceptedRequestRequest
  "Network.deleteCookies": Protocol.Network.DeleteCookiesRequest
  "Network.emulateNetworkConditions": Protocol.Network.EmulateNetworkConditionsRequest
  "Network.enable": Protocol.Network.EnableRequest
  "Network.getCertificate": Protocol.Network.GetCertificateRequest
  "Network.getCookies": Protocol.Network.GetCookiesRequest
  "Network.getResponseBody": Protocol.Network.GetResponseBodyRequest
  "Network.getRequestPostData": Protocol.Network.GetRequestPostDataRequest
  "Network.getResponseBodyForInterception": Protocol.Network.GetResponseBodyForInterceptionRequest
  "Network.takeResponseBodyForInterceptionAsStream": Protocol.Network.TakeResponseBodyForInterceptionAsStreamRequest
  "Network.replayXHR": Protocol.Network.ReplayXHRRequest
  "Network.searchInResponseBody": Protocol.Network.SearchInResponseBodyRequest
  "Network.setBlockedURLs": Protocol.Network.SetBlockedURLsRequest
  "Network.setBypassServiceWorker": Protocol.Network.SetBypassServiceWorkerRequest
  "Network.setCacheDisabled": Protocol.Network.SetCacheDisabledRequest
  "Network.setCookie": Protocol.Network.SetCookieRequest
  "Network.setCookies": Protocol.Network.SetCookiesRequest
  "Network.setExtraHTTPHeaders": Protocol.Network.SetExtraHTTPHeadersRequest
  "Network.setAttachDebugStack": Protocol.Network.SetAttachDebugStackRequest
  "Network.setRequestInterception": Protocol.Network.SetRequestInterceptionRequest
  "Network.setUserAgentOverride": Protocol.Network.SetUserAgentOverrideRequest
  "Network.getSecurityIsolationStatus": Protocol.Network.GetSecurityIsolationStatusRequest
  "Network.enableReportingApi": Protocol.Network.EnableReportingApiRequest
  "Network.loadNetworkResource": Protocol.Network.LoadNetworkResourceRequest
  "Overlay.getHighlightObjectForTest": Protocol.Overlay.GetHighlightObjectForTestRequest
  "Overlay.getGridHighlightObjectsForTest": Protocol.Overlay.GetGridHighlightObjectsForTestRequest
  "Overlay.getSourceOrderHighlightObjectForTest": Protocol.Overlay.GetSourceOrderHighlightObjectForTestRequest
  "Overlay.highlightFrame": Protocol.Overlay.HighlightFrameRequest
  "Overlay.highlightNode": Protocol.Overlay.HighlightNodeRequest
  "Overlay.highlightQuad": Protocol.Overlay.HighlightQuadRequest
  "Overlay.highlightRect": Protocol.Overlay.HighlightRectRequest
  "Overlay.highlightSourceOrder": Protocol.Overlay.HighlightSourceOrderRequest
  "Overlay.setInspectMode": Protocol.Overlay.SetInspectModeRequest
  "Overlay.setShowAdHighlights": Protocol.Overlay.SetShowAdHighlightsRequest
  "Overlay.setPausedInDebuggerMessage": Protocol.Overlay.SetPausedInDebuggerMessageRequest
  "Overlay.setShowDebugBorders": Protocol.Overlay.SetShowDebugBordersRequest
  "Overlay.setShowFPSCounter": Protocol.Overlay.SetShowFPSCounterRequest
  "Overlay.setShowGridOverlays": Protocol.Overlay.SetShowGridOverlaysRequest
  "Overlay.setShowFlexOverlays": Protocol.Overlay.SetShowFlexOverlaysRequest
  "Overlay.setShowScrollSnapOverlays": Protocol.Overlay.SetShowScrollSnapOverlaysRequest
  "Overlay.setShowContainerQueryOverlays": Protocol.Overlay.SetShowContainerQueryOverlaysRequest
  "Overlay.setShowPaintRects": Protocol.Overlay.SetShowPaintRectsRequest
  "Overlay.setShowLayoutShiftRegions": Protocol.Overlay.SetShowLayoutShiftRegionsRequest
  "Overlay.setShowScrollBottleneckRects": Protocol.Overlay.SetShowScrollBottleneckRectsRequest
  "Overlay.setShowHitTestBorders": Protocol.Overlay.SetShowHitTestBordersRequest
  "Overlay.setShowWebVitals": Protocol.Overlay.SetShowWebVitalsRequest
  "Overlay.setShowViewportSizeOnResize": Protocol.Overlay.SetShowViewportSizeOnResizeRequest
  "Overlay.setShowHinge": Protocol.Overlay.SetShowHingeRequest
  "Overlay.setShowIsolatedElements": Protocol.Overlay.SetShowIsolatedElementsRequest
  "Page.addScriptToEvaluateOnLoad": Protocol.Page.AddScriptToEvaluateOnLoadRequest
  "Page.addScriptToEvaluateOnNewDocument": Protocol.Page.AddScriptToEvaluateOnNewDocumentRequest
  "Page.captureScreenshot": Protocol.Page.CaptureScreenshotRequest
  "Page.captureSnapshot": Protocol.Page.CaptureSnapshotRequest
  "Page.createIsolatedWorld": Protocol.Page.CreateIsolatedWorldRequest
  "Page.deleteCookie": Protocol.Page.DeleteCookieRequest
  "Page.getResourceContent": Protocol.Page.GetResourceContentRequest
  "Page.handleJavaScriptDialog": Protocol.Page.HandleJavaScriptDialogRequest
  "Page.navigate": Protocol.Page.NavigateRequest
  "Page.navigateToHistoryEntry": Protocol.Page.NavigateToHistoryEntryRequest
  "Page.printToPDF": Protocol.Page.PrintToPDFRequest
  "Page.reload": Protocol.Page.ReloadRequest
  "Page.removeScriptToEvaluateOnLoad": Protocol.Page.RemoveScriptToEvaluateOnLoadRequest
  "Page.removeScriptToEvaluateOnNewDocument": Protocol.Page.RemoveScriptToEvaluateOnNewDocumentRequest
  "Page.screencastFrameAck": Protocol.Page.ScreencastFrameAckRequest
  "Page.searchInResource": Protocol.Page.SearchInResourceRequest
  "Page.setAdBlockingEnabled": Protocol.Page.SetAdBlockingEnabledRequest
  "Page.setBypassCSP": Protocol.Page.SetBypassCSPRequest
  "Page.getPermissionsPolicyState": Protocol.Page.GetPermissionsPolicyStateRequest
  "Page.getOriginTrials": Protocol.Page.GetOriginTrialsRequest
  "Page.setDeviceMetricsOverride": Protocol.Page.SetDeviceMetricsOverrideRequest
  "Page.setDeviceOrientationOverride": Protocol.Page.SetDeviceOrientationOverrideRequest
  "Page.setFontFamilies": Protocol.Page.SetFontFamiliesRequest
  "Page.setFontSizes": Protocol.Page.SetFontSizesRequest
  "Page.setDocumentContent": Protocol.Page.SetDocumentContentRequest
  "Page.setDownloadBehavior": Protocol.Page.SetDownloadBehaviorRequest
  "Page.setGeolocationOverride": Protocol.Page.SetGeolocationOverrideRequest
  "Page.setLifecycleEventsEnabled": Protocol.Page.SetLifecycleEventsEnabledRequest
  "Page.setTouchEmulationEnabled": Protocol.Page.SetTouchEmulationEnabledRequest
  "Page.startScreencast": Protocol.Page.StartScreencastRequest
  "Page.setWebLifecycleState": Protocol.Page.SetWebLifecycleStateRequest
  "Page.produceCompilationCache": Protocol.Page.ProduceCompilationCacheRequest
  "Page.addCompilationCache": Protocol.Page.AddCompilationCacheRequest
  "Page.setSPCTransactionMode": Protocol.Page.SetSPCTransactionModeRequest
  "Page.generateTestReport": Protocol.Page.GenerateTestReportRequest
  "Page.setInterceptFileChooserDialog": Protocol.Page.SetInterceptFileChooserDialogRequest
  "Performance.enable": Protocol.Performance.EnableRequest
  "Performance.setTimeDomain": Protocol.Performance.SetTimeDomainRequest
  "PerformanceTimeline.enable": Protocol.PerformanceTimeline.EnableRequest
  "Security.setIgnoreCertificateErrors": Protocol.Security.SetIgnoreCertificateErrorsRequest
  "Security.handleCertificateError": Protocol.Security.HandleCertificateErrorRequest
  "Security.setOverrideCertificateErrors": Protocol.Security.SetOverrideCertificateErrorsRequest
  "ServiceWorker.deliverPushMessage": Protocol.ServiceWorker.DeliverPushMessageRequest
  "ServiceWorker.dispatchSyncEvent": Protocol.ServiceWorker.DispatchSyncEventRequest
  "ServiceWorker.dispatchPeriodicSyncEvent": Protocol.ServiceWorker.DispatchPeriodicSyncEventRequest
  "ServiceWorker.inspectWorker": Protocol.ServiceWorker.InspectWorkerRequest
  "ServiceWorker.setForceUpdateOnPageLoad": Protocol.ServiceWorker.SetForceUpdateOnPageLoadRequest
  "ServiceWorker.skipWaiting": Protocol.ServiceWorker.SkipWaitingRequest
  "ServiceWorker.startWorker": Protocol.ServiceWorker.StartWorkerRequest
  "ServiceWorker.stopWorker": Protocol.ServiceWorker.StopWorkerRequest
  "ServiceWorker.unregister": Protocol.ServiceWorker.UnregisterRequest
  "ServiceWorker.updateRegistration": Protocol.ServiceWorker.UpdateRegistrationRequest
  "Storage.clearDataForOrigin": Protocol.Storage.ClearDataForOriginRequest
  "Storage.getCookies": Protocol.Storage.GetCookiesRequest
  "Storage.setCookies": Protocol.Storage.SetCookiesRequest
  "Storage.clearCookies": Protocol.Storage.ClearCookiesRequest
  "Storage.getUsageAndQuota": Protocol.Storage.GetUsageAndQuotaRequest
  "Storage.overrideQuotaForOrigin": Protocol.Storage.OverrideQuotaForOriginRequest
  "Storage.trackCacheStorageForOrigin": Protocol.Storage.TrackCacheStorageForOriginRequest
  "Storage.trackIndexedDBForOrigin": Protocol.Storage.TrackIndexedDBForOriginRequest
  "Storage.untrackCacheStorageForOrigin": Protocol.Storage.UntrackCacheStorageForOriginRequest
  "Storage.untrackIndexedDBForOrigin": Protocol.Storage.UntrackIndexedDBForOriginRequest
  "Storage.clearTrustTokens": Protocol.Storage.ClearTrustTokensRequest
  "Target.activateTarget": Protocol.Target.ActivateTargetRequest
  "Target.attachToTarget": Protocol.Target.AttachToTargetRequest
  "Target.closeTarget": Protocol.Target.CloseTargetRequest
  "Target.exposeDevToolsProtocol": Protocol.Target.ExposeDevToolsProtocolRequest
  "Target.createBrowserContext": Protocol.Target.CreateBrowserContextRequest
  "Target.createTarget": Protocol.Target.CreateTargetRequest
  "Target.detachFromTarget": Protocol.Target.DetachFromTargetRequest
  "Target.disposeBrowserContext": Protocol.Target.DisposeBrowserContextRequest
  "Target.getTargetInfo": Protocol.Target.GetTargetInfoRequest
  "Target.sendMessageToTarget": Protocol.Target.SendMessageToTargetRequest
  "Target.setAutoAttach": Protocol.Target.SetAutoAttachRequest
  "Target.autoAttachRelated": Protocol.Target.AutoAttachRelatedRequest
  "Target.setDiscoverTargets": Protocol.Target.SetDiscoverTargetsRequest
  "Target.setRemoteLocations": Protocol.Target.SetRemoteLocationsRequest
  "Tethering.bind": Protocol.Tethering.BindRequest
  "Tethering.unbind": Protocol.Tethering.UnbindRequest
  "Tracing.recordClockSyncMarker": Protocol.Tracing.RecordClockSyncMarkerRequest
  "Tracing.requestMemoryDump": Protocol.Tracing.RequestMemoryDumpRequest
  "Tracing.start": Protocol.Tracing.StartRequest
  "Fetch.enable": Protocol.Fetch.EnableRequest
  "Fetch.failRequest": Protocol.Fetch.FailRequestRequest
  "Fetch.fulfillRequest": Protocol.Fetch.FulfillRequestRequest
  "Fetch.continueRequest": Protocol.Fetch.ContinueRequestRequest
  "Fetch.continueWithAuth": Protocol.Fetch.ContinueWithAuthRequest
  "Fetch.continueResponse": Protocol.Fetch.ContinueResponseRequest
  "Fetch.getResponseBody": Protocol.Fetch.GetResponseBodyRequest
  "Fetch.takeResponseBodyAsStream": Protocol.Fetch.TakeResponseBodyAsStreamRequest
  "WebAudio.getRealtimeData": Protocol.WebAudio.GetRealtimeDataRequest
  "WebAuthn.addVirtualAuthenticator": Protocol.WebAuthn.AddVirtualAuthenticatorRequest
  "WebAuthn.removeVirtualAuthenticator": Protocol.WebAuthn.RemoveVirtualAuthenticatorRequest
  "WebAuthn.addCredential": Protocol.WebAuthn.AddCredentialRequest
  "WebAuthn.getCredential": Protocol.WebAuthn.GetCredentialRequest
  "WebAuthn.getCredentials": Protocol.WebAuthn.GetCredentialsRequest
  "WebAuthn.removeCredential": Protocol.WebAuthn.RemoveCredentialRequest
  "WebAuthn.clearCredentials": Protocol.WebAuthn.ClearCredentialsRequest
  "WebAuthn.setUserVerified": Protocol.WebAuthn.SetUserVerifiedRequest
  "WebAuthn.setAutomaticPresenceSimulation": Protocol.WebAuthn.SetAutomaticPresenceSimulationRequest
  "Debugger.continueToLocation": Protocol.Debugger.ContinueToLocationRequest
  "Debugger.enable": Protocol.Debugger.EnableRequest
  "Debugger.evaluateOnCallFrame": Protocol.Debugger.EvaluateOnCallFrameRequest
  "Debugger.getPossibleBreakpoints": Protocol.Debugger.GetPossibleBreakpointsRequest
  "Debugger.getScriptSource": Protocol.Debugger.GetScriptSourceRequest
  "Debugger.getWasmBytecode": Protocol.Debugger.GetWasmBytecodeRequest
  "Debugger.getStackTrace": Protocol.Debugger.GetStackTraceRequest
  "Debugger.pauseOnAsyncCall": Protocol.Debugger.PauseOnAsyncCallRequest
  "Debugger.removeBreakpoint": Protocol.Debugger.RemoveBreakpointRequest
  "Debugger.restartFrame": Protocol.Debugger.RestartFrameRequest
  "Debugger.resume": Protocol.Debugger.ResumeRequest
  "Debugger.searchInContent": Protocol.Debugger.SearchInContentRequest
  "Debugger.setAsyncCallStackDepth": Protocol.Debugger.SetAsyncCallStackDepthRequest
  "Debugger.setBlackboxPatterns": Protocol.Debugger.SetBlackboxPatternsRequest
  "Debugger.setBlackboxedRanges": Protocol.Debugger.SetBlackboxedRangesRequest
  "Debugger.setBreakpoint": Protocol.Debugger.SetBreakpointRequest
  "Debugger.setInstrumentationBreakpoint": Protocol.Debugger.SetInstrumentationBreakpointRequest
  "Debugger.setBreakpointByUrl": Protocol.Debugger.SetBreakpointByUrlRequest
  "Debugger.setBreakpointOnFunctionCall": Protocol.Debugger.SetBreakpointOnFunctionCallRequest
  "Debugger.setBreakpointsActive": Protocol.Debugger.SetBreakpointsActiveRequest
  "Debugger.setPauseOnExceptions": Protocol.Debugger.SetPauseOnExceptionsRequest
  "Debugger.setReturnValue": Protocol.Debugger.SetReturnValueRequest
  "Debugger.setScriptSource": Protocol.Debugger.SetScriptSourceRequest
  "Debugger.setSkipAllPauses": Protocol.Debugger.SetSkipAllPausesRequest
  "Debugger.setVariableValue": Protocol.Debugger.SetVariableValueRequest
  "Debugger.stepInto": Protocol.Debugger.StepIntoRequest
  "Debugger.stepOver": Protocol.Debugger.StepOverRequest
  "HeapProfiler.addInspectedHeapObject": Protocol.HeapProfiler.AddInspectedHeapObjectRequest
  "HeapProfiler.getHeapObjectId": Protocol.HeapProfiler.GetHeapObjectIdRequest
  "HeapProfiler.getObjectByHeapObjectId": Protocol.HeapProfiler.GetObjectByHeapObjectIdRequest
  "HeapProfiler.startSampling": Protocol.HeapProfiler.StartSamplingRequest
  "HeapProfiler.startTrackingHeapObjects": Protocol.HeapProfiler.StartTrackingHeapObjectsRequest
  "HeapProfiler.stopTrackingHeapObjects": Protocol.HeapProfiler.StopTrackingHeapObjectsRequest
  "HeapProfiler.takeHeapSnapshot": Protocol.HeapProfiler.TakeHeapSnapshotRequest
  "Profiler.setSamplingInterval": Protocol.Profiler.SetSamplingIntervalRequest
  "Profiler.startPreciseCoverage": Protocol.Profiler.StartPreciseCoverageRequest
  "Runtime.awaitPromise": Protocol.Runtime.AwaitPromiseRequest
  "Runtime.callFunctionOn": Protocol.Runtime.CallFunctionOnRequest
  "Runtime.compileScript": Protocol.Runtime.CompileScriptRequest
  "Runtime.evaluate": Protocol.Runtime.EvaluateRequest
  "Runtime.getProperties": Protocol.Runtime.GetPropertiesRequest
  "Runtime.globalLexicalScopeNames": Protocol.Runtime.GlobalLexicalScopeNamesRequest
  "Runtime.queryObjects": Protocol.Runtime.QueryObjectsRequest
  "Runtime.releaseObject": Protocol.Runtime.ReleaseObjectRequest
  "Runtime.releaseObjectGroup": Protocol.Runtime.ReleaseObjectGroupRequest
  "Runtime.runScript": Protocol.Runtime.RunScriptRequest
  "Runtime.setAsyncCallStackDepth": Protocol.Runtime.SetAsyncCallStackDepthRequest
  "Runtime.setCustomObjectFormatterEnabled": Protocol.Runtime.SetCustomObjectFormatterEnabledRequest
  "Runtime.setMaxCallStackSizeToCapture": Protocol.Runtime.SetMaxCallStackSizeToCaptureRequest
  "Runtime.addBinding": Protocol.Runtime.AddBindingRequest
  "Runtime.removeBinding": Protocol.Runtime.RemoveBindingRequest
}

export interface ResultLookup {
  "Accessibility.getPartialAXTree": Protocol.Accessibility.GetPartialAXTreeResponse
  "Accessibility.getFullAXTree": Protocol.Accessibility.GetFullAXTreeResponse
  "Accessibility.getRootAXNode": Protocol.Accessibility.GetRootAXNodeResponse
  "Accessibility.getAXNodeAndAncestors": Protocol.Accessibility.GetAXNodeAndAncestorsResponse
  "Accessibility.getChildAXNodes": Protocol.Accessibility.GetChildAXNodesResponse
  "Accessibility.queryAXTree": Protocol.Accessibility.QueryAXTreeResponse
  "Animation.getCurrentTime": Protocol.Animation.GetCurrentTimeResponse
  "Animation.getPlaybackRate": Protocol.Animation.GetPlaybackRateResponse
  "Animation.resolveAnimation": Protocol.Animation.ResolveAnimationResponse
  "Audits.getEncodedResponse": Protocol.Audits.GetEncodedResponseResponse
  "Browser.getVersion": Protocol.Browser.GetVersionResponse
  "Browser.getBrowserCommandLine": Protocol.Browser.GetBrowserCommandLineResponse
  "Browser.getHistograms": Protocol.Browser.GetHistogramsResponse
  "Browser.getHistogram": Protocol.Browser.GetHistogramResponse
  "Browser.getWindowBounds": Protocol.Browser.GetWindowBoundsResponse
  "Browser.getWindowForTarget": Protocol.Browser.GetWindowForTargetResponse
  "CSS.addRule": Protocol.CSS.AddRuleResponse
  "CSS.collectClassNames": Protocol.CSS.CollectClassNamesResponse
  "CSS.createStyleSheet": Protocol.CSS.CreateStyleSheetResponse
  "CSS.getBackgroundColors": Protocol.CSS.GetBackgroundColorsResponse
  "CSS.getComputedStyleForNode": Protocol.CSS.GetComputedStyleForNodeResponse
  "CSS.getInlineStylesForNode": Protocol.CSS.GetInlineStylesForNodeResponse
  "CSS.getMatchedStylesForNode": Protocol.CSS.GetMatchedStylesForNodeResponse
  "CSS.getMediaQueries": Protocol.CSS.GetMediaQueriesResponse
  "CSS.getPlatformFontsForNode": Protocol.CSS.GetPlatformFontsForNodeResponse
  "CSS.getStyleSheetText": Protocol.CSS.GetStyleSheetTextResponse
  "CSS.takeComputedStyleUpdates": Protocol.CSS.TakeComputedStyleUpdatesResponse
  "CSS.setKeyframeKey": Protocol.CSS.SetKeyframeKeyResponse
  "CSS.setMediaText": Protocol.CSS.SetMediaTextResponse
  "CSS.setContainerQueryText": Protocol.CSS.SetContainerQueryTextResponse
  "CSS.setRuleSelector": Protocol.CSS.SetRuleSelectorResponse
  "CSS.setStyleSheetText": Protocol.CSS.SetStyleSheetTextResponse
  "CSS.setStyleTexts": Protocol.CSS.SetStyleTextsResponse
  "CSS.stopRuleUsageTracking": Protocol.CSS.StopRuleUsageTrackingResponse
  "CSS.takeCoverageDelta": Protocol.CSS.TakeCoverageDeltaResponse
  "CacheStorage.requestCacheNames": Protocol.CacheStorage.RequestCacheNamesResponse
  "CacheStorage.requestCachedResponse": Protocol.CacheStorage.RequestCachedResponseResponse
  "CacheStorage.requestEntries": Protocol.CacheStorage.RequestEntriesResponse
  "DOM.collectClassNamesFromSubtree": Protocol.DOM.CollectClassNamesFromSubtreeResponse
  "DOM.copyTo": Protocol.DOM.CopyToResponse
  "DOM.describeNode": Protocol.DOM.DescribeNodeResponse
  "DOM.getAttributes": Protocol.DOM.GetAttributesResponse
  "DOM.getBoxModel": Protocol.DOM.GetBoxModelResponse
  "DOM.getContentQuads": Protocol.DOM.GetContentQuadsResponse
  "DOM.getDocument": Protocol.DOM.GetDocumentResponse
  "DOM.getFlattenedDocument": Protocol.DOM.GetFlattenedDocumentResponse
  "DOM.getNodesForSubtreeByStyle": Protocol.DOM.GetNodesForSubtreeByStyleResponse
  "DOM.getNodeForLocation": Protocol.DOM.GetNodeForLocationResponse
  "DOM.getOuterHTML": Protocol.DOM.GetOuterHTMLResponse
  "DOM.getRelayoutBoundary": Protocol.DOM.GetRelayoutBoundaryResponse
  "DOM.getSearchResults": Protocol.DOM.GetSearchResultsResponse
  "DOM.moveTo": Protocol.DOM.MoveToResponse
  "DOM.performSearch": Protocol.DOM.PerformSearchResponse
  "DOM.pushNodeByPathToFrontend": Protocol.DOM.PushNodeByPathToFrontendResponse
  "DOM.pushNodesByBackendIdsToFrontend": Protocol.DOM.PushNodesByBackendIdsToFrontendResponse
  "DOM.querySelector": Protocol.DOM.QuerySelectorResponse
  "DOM.querySelectorAll": Protocol.DOM.QuerySelectorAllResponse
  "DOM.requestNode": Protocol.DOM.RequestNodeResponse
  "DOM.resolveNode": Protocol.DOM.ResolveNodeResponse
  "DOM.getNodeStackTraces": Protocol.DOM.GetNodeStackTracesResponse
  "DOM.getFileInfo": Protocol.DOM.GetFileInfoResponse
  "DOM.setNodeName": Protocol.DOM.SetNodeNameResponse
  "DOM.getFrameOwner": Protocol.DOM.GetFrameOwnerResponse
  "DOM.getContainerForNode": Protocol.DOM.GetContainerForNodeResponse
  "DOM.getQueryingDescendantsForContainer": Protocol.DOM.GetQueryingDescendantsForContainerResponse
  "DOMDebugger.getEventListeners": Protocol.DOMDebugger.GetEventListenersResponse
  "DOMSnapshot.getSnapshot": Protocol.DOMSnapshot.GetSnapshotResponse
  "DOMSnapshot.captureSnapshot": Protocol.DOMSnapshot.CaptureSnapshotResponse
  "DOMStorage.getDOMStorageItems": Protocol.DOMStorage.GetDOMStorageItemsResponse
  "Database.executeSQL": Protocol.Database.ExecuteSQLResponse
  "Database.getDatabaseTableNames": Protocol.Database.GetDatabaseTableNamesResponse
  "Emulation.canEmulate": Protocol.Emulation.CanEmulateResponse
  "Emulation.setVirtualTimePolicy": Protocol.Emulation.SetVirtualTimePolicyResponse
  "HeadlessExperimental.beginFrame": Protocol.HeadlessExperimental.BeginFrameResponse
  "IO.read": Protocol.IO.ReadResponse
  "IO.resolveBlob": Protocol.IO.ResolveBlobResponse
  "IndexedDB.requestData": Protocol.IndexedDB.RequestDataResponse
  "IndexedDB.getMetadata": Protocol.IndexedDB.GetMetadataResponse
  "IndexedDB.requestDatabase": Protocol.IndexedDB.RequestDatabaseResponse
  "IndexedDB.requestDatabaseNames": Protocol.IndexedDB.RequestDatabaseNamesResponse
  "LayerTree.compositingReasons": Protocol.LayerTree.CompositingReasonsResponse
  "LayerTree.loadSnapshot": Protocol.LayerTree.LoadSnapshotResponse
  "LayerTree.makeSnapshot": Protocol.LayerTree.MakeSnapshotResponse
  "LayerTree.profileSnapshot": Protocol.LayerTree.ProfileSnapshotResponse
  "LayerTree.replaySnapshot": Protocol.LayerTree.ReplaySnapshotResponse
  "LayerTree.snapshotCommandLog": Protocol.LayerTree.SnapshotCommandLogResponse
  "Memory.getDOMCounters": Protocol.Memory.GetDOMCountersResponse
  "Memory.getAllTimeSamplingProfile": Protocol.Memory.GetAllTimeSamplingProfileResponse
  "Memory.getBrowserSamplingProfile": Protocol.Memory.GetBrowserSamplingProfileResponse
  "Memory.getSamplingProfile": Protocol.Memory.GetSamplingProfileResponse
  "Network.canClearBrowserCache": Protocol.Network.CanClearBrowserCacheResponse
  "Network.canClearBrowserCookies": Protocol.Network.CanClearBrowserCookiesResponse
  "Network.canEmulateNetworkConditions": Protocol.Network.CanEmulateNetworkConditionsResponse
  "Network.getAllCookies": Protocol.Network.GetAllCookiesResponse
  "Network.getCertificate": Protocol.Network.GetCertificateResponse
  "Network.getCookies": Protocol.Network.GetCookiesResponse
  "Network.getResponseBody": Protocol.Network.GetResponseBodyResponse
  "Network.getRequestPostData": Protocol.Network.GetRequestPostDataResponse
  "Network.getResponseBodyForInterception": Protocol.Network.GetResponseBodyForInterceptionResponse
  "Network.takeResponseBodyForInterceptionAsStream": Protocol.Network.TakeResponseBodyForInterceptionAsStreamResponse
  "Network.searchInResponseBody": Protocol.Network.SearchInResponseBodyResponse
  "Network.setCookie": Protocol.Network.SetCookieResponse
  "Network.getSecurityIsolationStatus": Protocol.Network.GetSecurityIsolationStatusResponse
  "Network.loadNetworkResource": Protocol.Network.LoadNetworkResourceResponse
  "Overlay.getHighlightObjectForTest": Protocol.Overlay.GetHighlightObjectForTestResponse
  "Overlay.getGridHighlightObjectsForTest": Protocol.Overlay.GetGridHighlightObjectsForTestResponse
  "Overlay.getSourceOrderHighlightObjectForTest": Protocol.Overlay.GetSourceOrderHighlightObjectForTestResponse
  "Page.addScriptToEvaluateOnLoad": Protocol.Page.AddScriptToEvaluateOnLoadResponse
  "Page.addScriptToEvaluateOnNewDocument": Protocol.Page.AddScriptToEvaluateOnNewDocumentResponse
  "Page.captureScreenshot": Protocol.Page.CaptureScreenshotResponse
  "Page.captureSnapshot": Protocol.Page.CaptureSnapshotResponse
  "Page.createIsolatedWorld": Protocol.Page.CreateIsolatedWorldResponse
  "Page.getAppManifest": Protocol.Page.GetAppManifestResponse
  "Page.getInstallabilityErrors": Protocol.Page.GetInstallabilityErrorsResponse
  "Page.getManifestIcons": Protocol.Page.GetManifestIconsResponse
  "Page.getAppId": Protocol.Page.GetAppIdResponse
  "Page.getCookies": Protocol.Page.GetCookiesResponse
  "Page.getFrameTree": Protocol.Page.GetFrameTreeResponse
  "Page.getLayoutMetrics": Protocol.Page.GetLayoutMetricsResponse
  "Page.getNavigationHistory": Protocol.Page.GetNavigationHistoryResponse
  "Page.getResourceContent": Protocol.Page.GetResourceContentResponse
  "Page.getResourceTree": Protocol.Page.GetResourceTreeResponse
  "Page.navigate": Protocol.Page.NavigateResponse
  "Page.printToPDF": Protocol.Page.PrintToPDFResponse
  "Page.searchInResource": Protocol.Page.SearchInResourceResponse
  "Page.getPermissionsPolicyState": Protocol.Page.GetPermissionsPolicyStateResponse
  "Page.getOriginTrials": Protocol.Page.GetOriginTrialsResponse
  "Performance.getMetrics": Protocol.Performance.GetMetricsResponse
  "Storage.getCookies": Protocol.Storage.GetCookiesResponse
  "Storage.getUsageAndQuota": Protocol.Storage.GetUsageAndQuotaResponse
  "Storage.getTrustTokens": Protocol.Storage.GetTrustTokensResponse
  "Storage.clearTrustTokens": Protocol.Storage.ClearTrustTokensResponse
  "SystemInfo.getInfo": Protocol.SystemInfo.GetInfoResponse
  "SystemInfo.getProcessInfo": Protocol.SystemInfo.GetProcessInfoResponse
  "Target.attachToTarget": Protocol.Target.AttachToTargetResponse
  "Target.attachToBrowserTarget": Protocol.Target.AttachToBrowserTargetResponse
  "Target.closeTarget": Protocol.Target.CloseTargetResponse
  "Target.createBrowserContext": Protocol.Target.CreateBrowserContextResponse
  "Target.getBrowserContexts": Protocol.Target.GetBrowserContextsResponse
  "Target.createTarget": Protocol.Target.CreateTargetResponse
  "Target.getTargetInfo": Protocol.Target.GetTargetInfoResponse
  "Target.getTargets": Protocol.Target.GetTargetsResponse
  "Tracing.getCategories": Protocol.Tracing.GetCategoriesResponse
  "Tracing.requestMemoryDump": Protocol.Tracing.RequestMemoryDumpResponse
  "Fetch.getResponseBody": Protocol.Fetch.GetResponseBodyResponse
  "Fetch.takeResponseBodyAsStream": Protocol.Fetch.TakeResponseBodyAsStreamResponse
  "WebAudio.getRealtimeData": Protocol.WebAudio.GetRealtimeDataResponse
  "WebAuthn.addVirtualAuthenticator": Protocol.WebAuthn.AddVirtualAuthenticatorResponse
  "WebAuthn.getCredential": Protocol.WebAuthn.GetCredentialResponse
  "WebAuthn.getCredentials": Protocol.WebAuthn.GetCredentialsResponse
  "Debugger.enable": Protocol.Debugger.EnableResponse
  "Debugger.evaluateOnCallFrame": Protocol.Debugger.EvaluateOnCallFrameResponse
  "Debugger.getPossibleBreakpoints": Protocol.Debugger.GetPossibleBreakpointsResponse
  "Debugger.getScriptSource": Protocol.Debugger.GetScriptSourceResponse
  "Debugger.getWasmBytecode": Protocol.Debugger.GetWasmBytecodeResponse
  "Debugger.getStackTrace": Protocol.Debugger.GetStackTraceResponse
  "Debugger.restartFrame": Protocol.Debugger.RestartFrameResponse
  "Debugger.searchInContent": Protocol.Debugger.SearchInContentResponse
  "Debugger.setBreakpoint": Protocol.Debugger.SetBreakpointResponse
  "Debugger.setInstrumentationBreakpoint": Protocol.Debugger.SetInstrumentationBreakpointResponse
  "Debugger.setBreakpointByUrl": Protocol.Debugger.SetBreakpointByUrlResponse
  "Debugger.setBreakpointOnFunctionCall": Protocol.Debugger.SetBreakpointOnFunctionCallResponse
  "Debugger.setScriptSource": Protocol.Debugger.SetScriptSourceResponse
  "HeapProfiler.getHeapObjectId": Protocol.HeapProfiler.GetHeapObjectIdResponse
  "HeapProfiler.getObjectByHeapObjectId": Protocol.HeapProfiler.GetObjectByHeapObjectIdResponse
  "HeapProfiler.getSamplingProfile": Protocol.HeapProfiler.GetSamplingProfileResponse
  "HeapProfiler.stopSampling": Protocol.HeapProfiler.StopSamplingResponse
  "Profiler.getBestEffortCoverage": Protocol.Profiler.GetBestEffortCoverageResponse
  "Profiler.startPreciseCoverage": Protocol.Profiler.StartPreciseCoverageResponse
  "Profiler.stop": Protocol.Profiler.StopResponse
  "Profiler.takePreciseCoverage": Protocol.Profiler.TakePreciseCoverageResponse
  "Profiler.takeTypeProfile": Protocol.Profiler.TakeTypeProfileResponse
  "Runtime.awaitPromise": Protocol.Runtime.AwaitPromiseResponse
  "Runtime.callFunctionOn": Protocol.Runtime.CallFunctionOnResponse
  "Runtime.compileScript": Protocol.Runtime.CompileScriptResponse
  "Runtime.evaluate": Protocol.Runtime.EvaluateResponse
  "Runtime.getIsolateId": Protocol.Runtime.GetIsolateIdResponse
  "Runtime.getHeapUsage": Protocol.Runtime.GetHeapUsageResponse
  "Runtime.getProperties": Protocol.Runtime.GetPropertiesResponse
  "Runtime.globalLexicalScopeNames": Protocol.Runtime.GlobalLexicalScopeNamesResponse
  "Runtime.queryObjects": Protocol.Runtime.QueryObjectsResponse
  "Runtime.runScript": Protocol.Runtime.RunScriptResponse
  "Schema.getDomains": Protocol.Schema.GetDomainsResponse
}

export type Param = keyof ParamsLookup
export type Result = keyof ResultLookup

export interface RequestMessage<T extends Param = Param> {
  id: number
  sessionId: SessionID | undefined
  method: T
  params: ParamsLookup[T]
}

export interface ResponseMessage<T extends Result = Result> {
  id: number
  sessionId: SessionID | undefined
  result: ResultLookup[T]
}

export interface EventMessage<T extends Param = Param> {
  sessionId: SessionID | undefined
  method: T
  params: ParamsLookup[T]
}
